@model Acme.SimpleTaskApp.Web.Models.Orders.IndexViewModel
@using Acme.SimpleTaskApp.Orders
@using Acme.SimpleTaskApp.Orders.Dto
@{
    ViewBag.Title = "Đơn hàng của tôi";
}

<div class="container py-8">
    <h1 class="text-3xl font-bold mb-8">Đơn hàng của tôi</h1>

    @if (!Model.Orders.Any())
    {
        <div class="container py-16 flex flex-col items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-muted-foreground mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path d="M3 3h2l.4 2M7 13h10l4-8H5.4"></path>
            </svg>
            <h1 class="text-2xl font-bold mb-2">Chưa có đơn hàng nào</h1>
            <p class="text-muted-foreground mb-6">Bạn chưa có đơn hàng nào trong lịch sử mua hàng.</p>
            <a href="/products" class="btn btn-success">Mua sắm ngay</a>
        </div>
    }
    else
    {
        <div class="space-y-6">
            @foreach (var order in Model.Orders)
            {
                var statusColor = GetStatusColor(order.Status);
                <div class="card overflow-hidden">
                    <div class="card-body p-6">
                        <div class="d-flex flex-column flex-md-row justify-content-between gap-4">
                            <div>
                                <div class="d-flex align-items-center gap-2 mb-1">
                                    <h3 class="font-semibold">Đơn hàng #@order.Id</h3>
                                    <span class="badge @statusColor">
                                        @GetStatusText(order.Status)
                                    </span>
                                </div>
                                <p class="text-sm text-muted-foreground">Ngày đặt: @order.CreationTime.ToString("dd/MM/yyyy")</p>
                                <p class="text-sm text-muted-foreground">
                                    Người nhận: @order.UserName | @order.UserEmail
                                </p>
                            </div>

                            <div class="text-end">
                                <p class="font-medium">Tổng tiền</p>
                                <p class="text-lg font-bold text-success">@FormatCurrency(order.TotalAmount)</p>
                            </div>
                        </div>

                        <div class="mt-4 border-top pt-4">
                            <h4 class="font-medium mb-3">Sản phẩm trong đơn hàng</h4>
                            <div class="row">
                                @foreach (var item in order.OrderItems.Take(3))
                                {
                                    <div class="col-sm-4 d-flex align-items-center gap-3 mb-3">
                                        <div class="flex-1">
                                            <p class="font-medium">@item.ProductName</p>
                                            <p class="text-sm text-muted-foreground">@item.Quantity x @FormatCurrency(item.Price)</p>
                                        </div>
                                    </div>
                                }

                                @if (order.OrderItems.Count > 3)
                                {
                                    <div class="text-muted-foreground">
                                        +@(order.OrderItems.Count - 3) sản phẩm khác
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="card-footer bg-light px-6 py-3 d-flex justify-content-between align-items-center">
                        <div class="text-sm text-muted-foreground">
                            <i class="bi bi-box"></i>
                            <span>
                                @order.OrderItems.Sum(i => i.Quantity) sản phẩm
                            </span>
                        </div>
                        <a href="/orders/details/@order.Id" class="btn btn-outline-success btn-sm">
                            Xem chi tiết <i class="bi bi-chevron-right ms-1"></i>
                        </a>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    private string GetStatusColor(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning",
            OrderStatus.Processing => "bg-info",
            OrderStatus.Shipped => "bg-primary",
            OrderStatus.Delivered => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã giao hàng",
            OrderStatus.Delivered => "Đã nhận hàng",
            OrderStatus.Cancelled => "Đã hủy",
            _ => status.ToString()
        };
    }

    private string FormatCurrency(decimal amount)
    {
        return amount.ToString("N0") + " đ";
    }
} 